# This is a basic workflow to help you get started with Actions

name: Kizuner Android

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [main]
  # pull_request:
  #   branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      repo_ref:
        description: Remote ref
        required: false
        default: "master"
      app_version:
        description: App version
        default: 1.0.15
        required: true
      build_apk:
        description: Build APK and upload to AppCenter (1 to enable)
        required: false
      build_aab:
        description: Build AAB and upload to Slack (1 to enable)
        required: false
      build_staging:
        description: Build Staging and upload to Slack (1 to enable)
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-android:
    name: Build Android app
    # The type of runner that the job will run on
    runs-on: macos-latest
    env:
      APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
      REPO_REF: ${{ github.event.inputs.repo_ref || 'master' }}
      APP_VERSION: ${{ github.event.inputs.app_version }}
      SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          repository: "quocs-studio/kizuner-mobile"
          token: ${{ secrets.QUOCS_GH_TOKEN }}
          ref: ${{ env.REPO_REF }}

      - name: Check for source
        run: |
          ls -l

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true
          working-directory: "android"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restoring yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn1-

      - name: Install yarn dependencies
        run: yarn install

      - name: Run fastlane beta
        working-directory: android
        run: bundler exec fastlane beta
        if: ${{ github.event.inputs.build_apk == '1' }}
        

      - name: Run fastlane bundle
        working-directory: android
        run: bundler exec fastlane bundle
        if: ${{ github.event.inputs.build_aab == '1' }}
        
        
      - name: Run fastlane staging
        working-directory: android
        run: bundler exec fastlane staging
        if: ${{ github.event.inputs.build_staging == '1' }}
